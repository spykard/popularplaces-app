!function(t,o){"object"==typeof exports?module.exports=o(require("./wicket")):"function"==typeof define&&define.amd?define(["wicket"],o):o(t.Wkt)}(this,function(t){return t.Wkt.prototype.isRectangle=!1,t.Wkt.prototype.trunc=function(o){var n,r=[];for(n=0;n<o.length;n+=1)t.isArray(o[n])?r.push(this.trunc(o[n])):0!==n&&this.sameCoords(o[0],o[n])||r.push(o[n]);return r},t.Wkt.prototype.construct={point:function(t,o){var n=o||this.components;return n instanceof Array&&(n=n[0]),L.marker(this.coordsToLatLng(n),t)},multipoint:function(t){var o,n=[],r=this.components;for(o=0;o<r.length;o+=1)n.push(this.construct.point.call(this,t,r[o]));return L.featureGroup(n,t)},linestring:function(t,o){var n=o||this.components,r=this.coordsToLatLngs(n,0,this.coordsToLatLng);return L.polyline(r,t)},multilinestring:function(t){var o=this.components,n=this.coordsToLatLngs(o,1,this.coordsToLatLng);return L.multiPolyline?L.multiPolyline(n,t):L.polyline(n,t)},polygon:function(t){var o=this.trunc(this.components),n=this.coordsToLatLngs(o,1,this.coordsToLatLng);return L.polygon(n,t)},multipolygon:function(t){var o=this.trunc(this.components),n=this.coordsToLatLngs(o,2,this.coordsToLatLng);return L.multiPolygon?L.multiPolygon(n,t):L.polygon(n,t)},geometrycollection:function(t){var o,n,r;for(o=this.trunc(this.components),r=[],n=0;n<this.components.length;n+=1)r.push(this.construct[o[n].type].call(this,o[n]));return L.featureGroup(r,t)}},L.Util.extend(t.Wkt.prototype,{coordsToLatLngs:L.GeoJSON.coordsToLatLngs,coordsToLatLng:function(t,o){var n=o?t.x:t.y,r=o?t.y:t.x;return L.latLng(n,r,!0)}}),t.Wkt.prototype.deconstruct=function(o){var n,r,e,s,c,l,u,i;if(r=function(o){var n,e;for(e=[],n=0;n<o.length;n+=1)t.isArray(o[n])?e.push(r(o[n])):e.push({x:o[n].lng,y:o[n].lat});return e},o.constructor===L.Marker||o.constructor===L.marker)return{type:"point",components:[{x:o.getLatLng().lng,y:o.getLatLng().lat}]};if(o.constructor===L.Rectangle||o.constructor===L.rectangle)return{type:"polygon",isRectangle:!0,components:[[{x:(u=o.getBounds()).getSouthWest().lng,y:u.getNorthEast().lat},{x:u.getNorthEast().lng,y:u.getNorthEast().lat},{x:u.getNorthEast().lng,y:u.getSouthWest().lat},{x:u.getSouthWest().lng,y:u.getSouthWest().lat},{x:u.getSouthWest().lng,y:u.getNorthEast().lat}]]};if((o.constructor===L.Polyline||o.constructor===L.polyline)&&(c=[],!(u=o.getLatLngs())[0].equals(u[u.length-1]))){for(s=0;s<u.length;s+=1)c.push({x:u[s].lng,y:u[s].lat});return{type:"linestring",components:c}}if(o.constructor===L.Polygon||o.constructor===L.polygon){for(l=[],c=[],i=o.getLatLngs()[0],s=0;s<i.length;s+=1)c.push({x:i[s].lng,y:i[s].lat});if(c.push({x:i[0].lng,y:i[0].lat}),l.push(c),o._holes&&o._holes.length>0)for(c=r(o._holes),s=0;s<c.length;s++)c[s].push(c[s][0]),l.push(c[s]);return{type:"polygon",components:l}}if(o.constructor===L.MultiPolyline||o.constructor===L.MultiPolygon||o.constructor===L.LayerGroup||o.constructor===L.FeatureGroup){for(n in e=[],u=o._layers)u.hasOwnProperty(n)&&(u[n].getLatLngs||u[n].getLatLng)&&e.push(this.deconstruct(u[n]));return{type:function(){switch(o.constructor){case L.MultiPolyline:return"multilinestring";case L.MultiPolygon:return"multipolygon";case L.FeatureGroup:return function(){var t,n,r,e;for(t in n=!0,r=!0,e=!0,o._layers)o._layers.hasOwnProperty(t)&&(o._layers[t].constructor!==L.Marker&&(e=!1),o._layers[t].constructor!==L.Polyline&&(r=!1),o._layers[t].constructor!==L.Polygon&&(n=!1));return e?"multipoint":r?"multilinestring":n?"multipolygon":"geometrycollection"}();default:return"geometrycollection"}}(),components:function(){var t,o;for(o=[],t=0;t<e.length;t+=1)e[t].components&&o.push(e[t].components);return o}()}}o.constructor===L.Circle||o.constructor===L.circle?console.log("Deconstruction of L.Circle objects is not yet supported"):console.log("The passed object does not have any recognizable properties.")},t});